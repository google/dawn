#version 310 es
#extension GL_AMD_gpu_shader_half_float: require


struct S {
  f16vec3 v;
};

layout(binding = 0, std140)
uniform U_block_1_ubo {
  S inner;
} v_1;
void f() {
  f16vec3 v = v_1.inner.v;
  float16_t x = v_1.inner.v.x;
  float16_t y = v_1.inner.v.y;
  float16_t z = v_1.inner.v.z;
  f16vec2 xx = v_1.inner.v.xx;
  f16vec2 xy = v_1.inner.v.xy;
  f16vec2 xz = v_1.inner.v.xz;
  f16vec2 yx = v_1.inner.v.yx;
  f16vec2 yy = v_1.inner.v.yy;
  f16vec2 yz = v_1.inner.v.yz;
  f16vec2 zx = v_1.inner.v.zx;
  f16vec2 zy = v_1.inner.v.zy;
  f16vec2 zz = v_1.inner.v.zz;
  f16vec3 xxx = v_1.inner.v.xxx;
  f16vec3 xxy = v_1.inner.v.xxy;
  f16vec3 xxz = v_1.inner.v.xxz;
  f16vec3 xyx = v_1.inner.v.xyx;
  f16vec3 xyy = v_1.inner.v.xyy;
  f16vec3 xyz = v_1.inner.v.xyz;
  f16vec3 xzx = v_1.inner.v.xzx;
  f16vec3 xzy = v_1.inner.v.xzy;
  f16vec3 xzz = v_1.inner.v.xzz;
  f16vec3 yxx = v_1.inner.v.yxx;
  f16vec3 yxy = v_1.inner.v.yxy;
  f16vec3 yxz = v_1.inner.v.yxz;
  f16vec3 yyx = v_1.inner.v.yyx;
  f16vec3 yyy = v_1.inner.v.yyy;
  f16vec3 yyz = v_1.inner.v.yyz;
  f16vec3 yzx = v_1.inner.v.yzx;
  f16vec3 yzy = v_1.inner.v.yzy;
  f16vec3 yzz = v_1.inner.v.yzz;
  f16vec3 zxx = v_1.inner.v.zxx;
  f16vec3 zxy = v_1.inner.v.zxy;
  f16vec3 zxz = v_1.inner.v.zxz;
  f16vec3 zyx = v_1.inner.v.zyx;
  f16vec3 zyy = v_1.inner.v.zyy;
  f16vec3 zyz = v_1.inner.v.zyz;
  f16vec3 zzx = v_1.inner.v.zzx;
  f16vec3 zzy = v_1.inner.v.zzy;
  f16vec3 zzz = v_1.inner.v.zzz;
  f16vec4 xxxx = v_1.inner.v.xxxx;
  f16vec4 xxxy = v_1.inner.v.xxxy;
  f16vec4 xxxz = v_1.inner.v.xxxz;
  f16vec4 xxyx = v_1.inner.v.xxyx;
  f16vec4 xxyy = v_1.inner.v.xxyy;
  f16vec4 xxyz = v_1.inner.v.xxyz;
  f16vec4 xxzx = v_1.inner.v.xxzx;
  f16vec4 xxzy = v_1.inner.v.xxzy;
  f16vec4 xxzz = v_1.inner.v.xxzz;
  f16vec4 xyxx = v_1.inner.v.xyxx;
  f16vec4 xyxy = v_1.inner.v.xyxy;
  f16vec4 xyxz = v_1.inner.v.xyxz;
  f16vec4 xyyx = v_1.inner.v.xyyx;
  f16vec4 xyyy = v_1.inner.v.xyyy;
  f16vec4 xyyz = v_1.inner.v.xyyz;
  f16vec4 xyzx = v_1.inner.v.xyzx;
  f16vec4 xyzy = v_1.inner.v.xyzy;
  f16vec4 xyzz = v_1.inner.v.xyzz;
  f16vec4 xzxx = v_1.inner.v.xzxx;
  f16vec4 xzxy = v_1.inner.v.xzxy;
  f16vec4 xzxz = v_1.inner.v.xzxz;
  f16vec4 xzyx = v_1.inner.v.xzyx;
  f16vec4 xzyy = v_1.inner.v.xzyy;
  f16vec4 xzyz = v_1.inner.v.xzyz;
  f16vec4 xzzx = v_1.inner.v.xzzx;
  f16vec4 xzzy = v_1.inner.v.xzzy;
  f16vec4 xzzz = v_1.inner.v.xzzz;
  f16vec4 yxxx = v_1.inner.v.yxxx;
  f16vec4 yxxy = v_1.inner.v.yxxy;
  f16vec4 yxxz = v_1.inner.v.yxxz;
  f16vec4 yxyx = v_1.inner.v.yxyx;
  f16vec4 yxyy = v_1.inner.v.yxyy;
  f16vec4 yxyz = v_1.inner.v.yxyz;
  f16vec4 yxzx = v_1.inner.v.yxzx;
  f16vec4 yxzy = v_1.inner.v.yxzy;
  f16vec4 yxzz = v_1.inner.v.yxzz;
  f16vec4 yyxx = v_1.inner.v.yyxx;
  f16vec4 yyxy = v_1.inner.v.yyxy;
  f16vec4 yyxz = v_1.inner.v.yyxz;
  f16vec4 yyyx = v_1.inner.v.yyyx;
  f16vec4 yyyy = v_1.inner.v.yyyy;
  f16vec4 yyyz = v_1.inner.v.yyyz;
  f16vec4 yyzx = v_1.inner.v.yyzx;
  f16vec4 yyzy = v_1.inner.v.yyzy;
  f16vec4 yyzz = v_1.inner.v.yyzz;
  f16vec4 yzxx = v_1.inner.v.yzxx;
  f16vec4 yzxy = v_1.inner.v.yzxy;
  f16vec4 yzxz = v_1.inner.v.yzxz;
  f16vec4 yzyx = v_1.inner.v.yzyx;
  f16vec4 yzyy = v_1.inner.v.yzyy;
  f16vec4 yzyz = v_1.inner.v.yzyz;
  f16vec4 yzzx = v_1.inner.v.yzzx;
  f16vec4 yzzy = v_1.inner.v.yzzy;
  f16vec4 yzzz = v_1.inner.v.yzzz;
  f16vec4 zxxx = v_1.inner.v.zxxx;
  f16vec4 zxxy = v_1.inner.v.zxxy;
  f16vec4 zxxz = v_1.inner.v.zxxz;
  f16vec4 zxyx = v_1.inner.v.zxyx;
  f16vec4 zxyy = v_1.inner.v.zxyy;
  f16vec4 zxyz = v_1.inner.v.zxyz;
  f16vec4 zxzx = v_1.inner.v.zxzx;
  f16vec4 zxzy = v_1.inner.v.zxzy;
  f16vec4 zxzz = v_1.inner.v.zxzz;
  f16vec4 zyxx = v_1.inner.v.zyxx;
  f16vec4 zyxy = v_1.inner.v.zyxy;
  f16vec4 zyxz = v_1.inner.v.zyxz;
  f16vec4 zyyx = v_1.inner.v.zyyx;
  f16vec4 zyyy = v_1.inner.v.zyyy;
  f16vec4 zyyz = v_1.inner.v.zyyz;
  f16vec4 zyzx = v_1.inner.v.zyzx;
  f16vec4 zyzy = v_1.inner.v.zyzy;
  f16vec4 zyzz = v_1.inner.v.zyzz;
  f16vec4 zzxx = v_1.inner.v.zzxx;
  f16vec4 zzxy = v_1.inner.v.zzxy;
  f16vec4 zzxz = v_1.inner.v.zzxz;
  f16vec4 zzyx = v_1.inner.v.zzyx;
  f16vec4 zzyy = v_1.inner.v.zzyy;
  f16vec4 zzyz = v_1.inner.v.zzyz;
  f16vec4 zzzx = v_1.inner.v.zzzx;
  f16vec4 zzzy = v_1.inner.v.zzzy;
  f16vec4 zzzz = v_1.inner.v.zzzz;
}
layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
void main() {
}
