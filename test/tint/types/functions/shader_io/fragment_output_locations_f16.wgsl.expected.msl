//
// main0
//
#include <metal_stdlib>
using namespace metal;

struct main0_outputs {
  int tint_symbol [[color(0)]];
};

int main0_inner() {
  return 1;
}

fragment main0_outputs main0() {
  main0_outputs tint_wrapper_result = {};
  tint_wrapper_result.tint_symbol = main0_inner();
  return tint_wrapper_result;
}
//
// main1
//
#include <metal_stdlib>
using namespace metal;

struct main1_outputs {
  uint tint_symbol [[color(1)]];
};

uint main1_inner() {
  return 1u;
}

fragment main1_outputs main1() {
  main1_outputs tint_wrapper_result = {};
  tint_wrapper_result.tint_symbol = main1_inner();
  return tint_wrapper_result;
}
//
// main2
//
#include <metal_stdlib>
using namespace metal;

struct main2_outputs {
  float tint_symbol [[color(2)]];
};

float main2_inner() {
  return 1.0f;
}

fragment main2_outputs main2() {
  main2_outputs tint_wrapper_result = {};
  tint_wrapper_result.tint_symbol = main2_inner();
  return tint_wrapper_result;
}
//
// main3
//
#include <metal_stdlib>
using namespace metal;

struct main3_outputs {
  float4 tint_symbol [[color(3)]];
};

float4 main3_inner() {
  return float4(1.0f, 2.0f, 3.0f, 4.0f);
}

fragment main3_outputs main3() {
  main3_outputs tint_wrapper_result = {};
  tint_wrapper_result.tint_symbol = main3_inner();
  return tint_wrapper_result;
}
//
// main4
//
#include <metal_stdlib>
using namespace metal;

struct main4_outputs {
  half tint_symbol [[color(4)]];
};

half main4_inner() {
  return 2.25h;
}

fragment main4_outputs main4() {
  main4_outputs tint_wrapper_result = {};
  tint_wrapper_result.tint_symbol = main4_inner();
  return tint_wrapper_result;
}
//
// main5
//
#include <metal_stdlib>
using namespace metal;

struct main5_outputs {
  half3 tint_symbol [[color(5)]];
};

half3 main5_inner() {
  return half3(3.0h, 5.0h, 8.0h);
}

fragment main5_outputs main5() {
  main5_outputs tint_wrapper_result = {};
  tint_wrapper_result.tint_symbol = main5_inner();
  return tint_wrapper_result;
}
