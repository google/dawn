#include <metal_stdlib>
using namespace metal;

struct atomic_compare_exchange_result_i32 {
  int old_value;
  bool exchanged;
};

struct tint_module_vars_struct {
  device atomic_int* a;
};

atomic_compare_exchange_result_i32 v_1(device atomic_int* const atomic_ptr, int cmp, int val) {
  int old_value = cmp;
  bool const v_2 = atomic_compare_exchange_weak_explicit(atomic_ptr, (&old_value), val, memory_order_relaxed, memory_order_relaxed);
  return atomic_compare_exchange_result_i32{.old_value=old_value, .exchanged=v_2};
}

kernel void compute_main(device atomic_int* a [[buffer(0)]]) {
  tint_module_vars_struct const tint_module_vars = tint_module_vars_struct{.a=a};
  int const v = v_1(tint_module_vars.a, 1, 1).old_value;
}
