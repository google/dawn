#include <metal_stdlib>
using namespace metal;

struct S_packed_vec3 {
  /* 0x0000 */ packed_uint3 v;
  /* 0x000c */ atomic_uint u;
};

struct tint_module_vars_struct {
  threadgroup S_packed_vec3* wgvar;
  device S_packed_vec3* output;
};

struct tint_symbol_1 {
  S_packed_vec3 tint_symbol;
};

void main_inner(uint tint_local_index, tint_module_vars_struct tint_module_vars) {
  if ((tint_local_index < 1u)) {
    (*tint_module_vars.wgvar).v = packed_uint3(uint3(0u));
    atomic_store_explicit((&(*tint_module_vars.wgvar).u), 0u, memory_order_relaxed);
  }
  threadgroup_barrier(mem_flags::mem_threadgroup);
  uint const x = atomic_load_explicit((&(*tint_module_vars.wgvar).u), memory_order_relaxed);
  atomic_store_explicit((&(*tint_module_vars.output).u), x, memory_order_relaxed);
}

kernel void v_1(uint tint_local_index [[thread_index_in_threadgroup]], threadgroup tint_symbol_1* v_2 [[threadgroup(0)]], device S_packed_vec3* output [[buffer(0)]]) {
  tint_module_vars_struct const tint_module_vars = tint_module_vars_struct{.wgvar=(&(*v_2).tint_symbol), .output=output};
  main_inner(tint_local_index, tint_module_vars);
}
