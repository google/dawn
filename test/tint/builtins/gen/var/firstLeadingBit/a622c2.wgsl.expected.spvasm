;
; fragment_main
;
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 81
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %fragment_main "fragment_main"
               OpExecutionMode %fragment_main OriginUpperLeft
               OpMemberName %prevent_dce_block 0 "inner"
               OpName %prevent_dce_block "prevent_dce_block"
               OpName %firstLeadingBit_a622c2 "firstLeadingBit_a622c2"
               OpName %arg_0 "arg_0"
               OpName %res "res"
               OpName %fragment_main "fragment_main"
               OpMemberDecorate %prevent_dce_block 0 Offset 0
               OpDecorate %prevent_dce_block Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
        %int = OpTypeInt 32 1
      %v2int = OpTypeVector %int 2
%prevent_dce_block = OpTypeStruct %v2int
%_ptr_StorageBuffer_prevent_dce_block = OpTypePointer StorageBuffer %prevent_dce_block
          %1 = OpVariable %_ptr_StorageBuffer_prevent_dce_block StorageBuffer
          %7 = OpTypeFunction %v2int
%_ptr_Function_v2int = OpTypePointer Function %v2int
      %int_1 = OpConstant %int 1
         %11 = OpConstantComposite %v2int %int_1 %int_1
       %uint = OpTypeInt 32 0
     %v2uint = OpTypeVector %uint 2
%uint_2147483648 = OpConstant %uint 2147483648
         %19 = OpConstantComposite %v2uint %uint_2147483648 %uint_2147483648
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
%uint_4294901760 = OpConstant %uint 4294901760
         %25 = OpConstantComposite %v2uint %uint_4294901760 %uint_4294901760
         %28 = OpConstantNull %v2uint
    %uint_16 = OpConstant %uint 16
         %30 = OpConstantComposite %v2uint %uint_16 %uint_16
 %uint_65280 = OpConstant %uint 65280
         %34 = OpConstantComposite %v2uint %uint_65280 %uint_65280
     %uint_8 = OpConstant %uint 8
         %38 = OpConstantComposite %v2uint %uint_8 %uint_8
   %uint_240 = OpConstant %uint 240
         %42 = OpConstantComposite %v2uint %uint_240 %uint_240
     %uint_4 = OpConstant %uint 4
         %46 = OpConstantComposite %v2uint %uint_4 %uint_4
    %uint_12 = OpConstant %uint 12
         %50 = OpConstantComposite %v2uint %uint_12 %uint_12
     %uint_2 = OpConstant %uint 2
         %54 = OpConstantComposite %v2uint %uint_2 %uint_2
     %uint_1 = OpConstant %uint 1
         %60 = OpConstantComposite %v2uint %uint_1 %uint_1
%uint_4294967295 = OpConstant %uint 4294967295
         %68 = OpConstantComposite %v2uint %uint_4294967295 %uint_4294967295
       %void = OpTypeVoid
         %75 = OpTypeFunction %void
%_ptr_StorageBuffer_v2int = OpTypePointer StorageBuffer %v2int
     %uint_0 = OpConstant %uint 0
%firstLeadingBit_a622c2 = OpFunction %v2int None %7
          %8 = OpLabel
      %arg_0 = OpVariable %_ptr_Function_v2int Function
        %res = OpVariable %_ptr_Function_v2int Function
               OpStore %arg_0 %11
         %13 = OpLoad %v2int %arg_0 None
         %16 = OpBitcast %v2uint %13
         %17 = OpNot %v2uint %16
         %18 = OpULessThan %v2bool %16 %19
         %23 = OpSelect %v2uint %18 %16 %17
         %24 = OpBitwiseAnd %v2uint %23 %25
         %27 = OpIEqual %v2bool %24 %28
         %29 = OpSelect %v2uint %27 %28 %30
         %32 = OpShiftRightLogical %v2uint %23 %29
         %33 = OpBitwiseAnd %v2uint %32 %34
         %36 = OpIEqual %v2bool %33 %28
         %37 = OpSelect %v2uint %36 %28 %38
         %40 = OpShiftRightLogical %v2uint %32 %37
         %41 = OpBitwiseAnd %v2uint %40 %42
         %44 = OpIEqual %v2bool %41 %28
         %45 = OpSelect %v2uint %44 %28 %46
         %48 = OpShiftRightLogical %v2uint %40 %45
         %49 = OpBitwiseAnd %v2uint %48 %50
         %52 = OpIEqual %v2bool %49 %28
         %53 = OpSelect %v2uint %52 %28 %54
         %56 = OpShiftRightLogical %v2uint %48 %53
         %57 = OpBitwiseAnd %v2uint %56 %54
         %58 = OpIEqual %v2bool %57 %28
         %59 = OpSelect %v2uint %58 %28 %60
         %62 = OpBitwiseOr %v2uint %53 %59
         %63 = OpBitwiseOr %v2uint %45 %62
         %64 = OpBitwiseOr %v2uint %37 %63
         %65 = OpBitwiseOr %v2uint %29 %64
         %66 = OpIEqual %v2bool %56 %28
         %67 = OpSelect %v2uint %66 %68 %65
         %70 = OpBitcast %v2int %67
               OpStore %res %70
         %72 = OpLoad %v2int %res None
               OpReturnValue %72
               OpFunctionEnd
%fragment_main = OpFunction %void None %75
         %76 = OpLabel
         %77 = OpFunctionCall %v2int %firstLeadingBit_a622c2
         %78 = OpAccessChain %_ptr_StorageBuffer_v2int %1 %uint_0
               OpStore %78 %77 None
               OpReturn
               OpFunctionEnd
;
; compute_main
;
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 81
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %compute_main "compute_main"
               OpExecutionMode %compute_main LocalSize 1 1 1
               OpMemberName %prevent_dce_block 0 "inner"
               OpName %prevent_dce_block "prevent_dce_block"
               OpName %firstLeadingBit_a622c2 "firstLeadingBit_a622c2"
               OpName %arg_0 "arg_0"
               OpName %res "res"
               OpName %compute_main "compute_main"
               OpMemberDecorate %prevent_dce_block 0 Offset 0
               OpDecorate %prevent_dce_block Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
        %int = OpTypeInt 32 1
      %v2int = OpTypeVector %int 2
%prevent_dce_block = OpTypeStruct %v2int
%_ptr_StorageBuffer_prevent_dce_block = OpTypePointer StorageBuffer %prevent_dce_block
          %1 = OpVariable %_ptr_StorageBuffer_prevent_dce_block StorageBuffer
          %7 = OpTypeFunction %v2int
%_ptr_Function_v2int = OpTypePointer Function %v2int
      %int_1 = OpConstant %int 1
         %11 = OpConstantComposite %v2int %int_1 %int_1
       %uint = OpTypeInt 32 0
     %v2uint = OpTypeVector %uint 2
%uint_2147483648 = OpConstant %uint 2147483648
         %19 = OpConstantComposite %v2uint %uint_2147483648 %uint_2147483648
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
%uint_4294901760 = OpConstant %uint 4294901760
         %25 = OpConstantComposite %v2uint %uint_4294901760 %uint_4294901760
         %28 = OpConstantNull %v2uint
    %uint_16 = OpConstant %uint 16
         %30 = OpConstantComposite %v2uint %uint_16 %uint_16
 %uint_65280 = OpConstant %uint 65280
         %34 = OpConstantComposite %v2uint %uint_65280 %uint_65280
     %uint_8 = OpConstant %uint 8
         %38 = OpConstantComposite %v2uint %uint_8 %uint_8
   %uint_240 = OpConstant %uint 240
         %42 = OpConstantComposite %v2uint %uint_240 %uint_240
     %uint_4 = OpConstant %uint 4
         %46 = OpConstantComposite %v2uint %uint_4 %uint_4
    %uint_12 = OpConstant %uint 12
         %50 = OpConstantComposite %v2uint %uint_12 %uint_12
     %uint_2 = OpConstant %uint 2
         %54 = OpConstantComposite %v2uint %uint_2 %uint_2
     %uint_1 = OpConstant %uint 1
         %60 = OpConstantComposite %v2uint %uint_1 %uint_1
%uint_4294967295 = OpConstant %uint 4294967295
         %68 = OpConstantComposite %v2uint %uint_4294967295 %uint_4294967295
       %void = OpTypeVoid
         %75 = OpTypeFunction %void
%_ptr_StorageBuffer_v2int = OpTypePointer StorageBuffer %v2int
     %uint_0 = OpConstant %uint 0
%firstLeadingBit_a622c2 = OpFunction %v2int None %7
          %8 = OpLabel
      %arg_0 = OpVariable %_ptr_Function_v2int Function
        %res = OpVariable %_ptr_Function_v2int Function
               OpStore %arg_0 %11
         %13 = OpLoad %v2int %arg_0 None
         %16 = OpBitcast %v2uint %13
         %17 = OpNot %v2uint %16
         %18 = OpULessThan %v2bool %16 %19
         %23 = OpSelect %v2uint %18 %16 %17
         %24 = OpBitwiseAnd %v2uint %23 %25
         %27 = OpIEqual %v2bool %24 %28
         %29 = OpSelect %v2uint %27 %28 %30
         %32 = OpShiftRightLogical %v2uint %23 %29
         %33 = OpBitwiseAnd %v2uint %32 %34
         %36 = OpIEqual %v2bool %33 %28
         %37 = OpSelect %v2uint %36 %28 %38
         %40 = OpShiftRightLogical %v2uint %32 %37
         %41 = OpBitwiseAnd %v2uint %40 %42
         %44 = OpIEqual %v2bool %41 %28
         %45 = OpSelect %v2uint %44 %28 %46
         %48 = OpShiftRightLogical %v2uint %40 %45
         %49 = OpBitwiseAnd %v2uint %48 %50
         %52 = OpIEqual %v2bool %49 %28
         %53 = OpSelect %v2uint %52 %28 %54
         %56 = OpShiftRightLogical %v2uint %48 %53
         %57 = OpBitwiseAnd %v2uint %56 %54
         %58 = OpIEqual %v2bool %57 %28
         %59 = OpSelect %v2uint %58 %28 %60
         %62 = OpBitwiseOr %v2uint %53 %59
         %63 = OpBitwiseOr %v2uint %45 %62
         %64 = OpBitwiseOr %v2uint %37 %63
         %65 = OpBitwiseOr %v2uint %29 %64
         %66 = OpIEqual %v2bool %56 %28
         %67 = OpSelect %v2uint %66 %68 %65
         %70 = OpBitcast %v2int %67
               OpStore %res %70
         %72 = OpLoad %v2int %res None
               OpReturnValue %72
               OpFunctionEnd
%compute_main = OpFunction %void None %75
         %76 = OpLabel
         %77 = OpFunctionCall %v2int %firstLeadingBit_a622c2
         %78 = OpAccessChain %_ptr_StorageBuffer_v2int %1 %uint_0
               OpStore %78 %77 None
               OpReturn
               OpFunctionEnd
;
; vertex_main
;
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 100
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint Vertex %vertex_main "vertex_main" %vertex_main_position_Output %vertex_main_loc0_Output %vertex_main___point_size_Output
               OpName %vertex_main_position_Output "vertex_main_position_Output"
               OpName %vertex_main_loc0_Output "vertex_main_loc0_Output"
               OpName %vertex_main___point_size_Output "vertex_main___point_size_Output"
               OpName %firstLeadingBit_a622c2 "firstLeadingBit_a622c2"
               OpName %arg_0 "arg_0"
               OpName %res "res"
               OpName %vertex_main_inner "vertex_main_inner"
               OpMemberName %VertexOutput 0 "pos"
               OpMemberName %VertexOutput 1 "prevent_dce"
               OpName %VertexOutput "VertexOutput"
               OpName %out "out"
               OpName %vertex_main "vertex_main"
               OpDecorate %vertex_main_position_Output BuiltIn Position
               OpDecorate %vertex_main_loc0_Output Location 0
               OpDecorate %vertex_main_loc0_Output Flat
               OpDecorate %vertex_main___point_size_Output BuiltIn PointSize
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
%vertex_main_position_Output = OpVariable %_ptr_Output_v4float Output
        %int = OpTypeInt 32 1
      %v2int = OpTypeVector %int 2
%_ptr_Output_v2int = OpTypePointer Output %v2int
%vertex_main_loc0_Output = OpVariable %_ptr_Output_v2int Output
%_ptr_Output_float = OpTypePointer Output %float
%vertex_main___point_size_Output = OpVariable %_ptr_Output_float Output
         %12 = OpTypeFunction %v2int
%_ptr_Function_v2int = OpTypePointer Function %v2int
      %int_1 = OpConstant %int 1
         %16 = OpConstantComposite %v2int %int_1 %int_1
       %uint = OpTypeInt 32 0
     %v2uint = OpTypeVector %uint 2
%uint_2147483648 = OpConstant %uint 2147483648
         %24 = OpConstantComposite %v2uint %uint_2147483648 %uint_2147483648
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
%uint_4294901760 = OpConstant %uint 4294901760
         %30 = OpConstantComposite %v2uint %uint_4294901760 %uint_4294901760
         %33 = OpConstantNull %v2uint
    %uint_16 = OpConstant %uint 16
         %35 = OpConstantComposite %v2uint %uint_16 %uint_16
 %uint_65280 = OpConstant %uint 65280
         %39 = OpConstantComposite %v2uint %uint_65280 %uint_65280
     %uint_8 = OpConstant %uint 8
         %43 = OpConstantComposite %v2uint %uint_8 %uint_8
   %uint_240 = OpConstant %uint 240
         %47 = OpConstantComposite %v2uint %uint_240 %uint_240
     %uint_4 = OpConstant %uint 4
         %51 = OpConstantComposite %v2uint %uint_4 %uint_4
    %uint_12 = OpConstant %uint 12
         %55 = OpConstantComposite %v2uint %uint_12 %uint_12
     %uint_2 = OpConstant %uint 2
         %59 = OpConstantComposite %v2uint %uint_2 %uint_2
     %uint_1 = OpConstant %uint 1
         %65 = OpConstantComposite %v2uint %uint_1 %uint_1
%uint_4294967295 = OpConstant %uint 4294967295
         %73 = OpConstantComposite %v2uint %uint_4294967295 %uint_4294967295
%VertexOutput = OpTypeStruct %v4float %v2int
         %80 = OpTypeFunction %VertexOutput
%_ptr_Function_VertexOutput = OpTypePointer Function %VertexOutput
         %84 = OpConstantNull %VertexOutput
%_ptr_Function_v4float = OpTypePointer Function %v4float
     %uint_0 = OpConstant %uint 0
         %88 = OpConstantNull %v4float
       %void = OpTypeVoid
         %94 = OpTypeFunction %void
    %float_1 = OpConstant %float 1
%firstLeadingBit_a622c2 = OpFunction %v2int None %12
         %13 = OpLabel
      %arg_0 = OpVariable %_ptr_Function_v2int Function
        %res = OpVariable %_ptr_Function_v2int Function
               OpStore %arg_0 %16
         %18 = OpLoad %v2int %arg_0 None
         %21 = OpBitcast %v2uint %18
         %22 = OpNot %v2uint %21
         %23 = OpULessThan %v2bool %21 %24
         %28 = OpSelect %v2uint %23 %21 %22
         %29 = OpBitwiseAnd %v2uint %28 %30
         %32 = OpIEqual %v2bool %29 %33
         %34 = OpSelect %v2uint %32 %33 %35
         %37 = OpShiftRightLogical %v2uint %28 %34
         %38 = OpBitwiseAnd %v2uint %37 %39
         %41 = OpIEqual %v2bool %38 %33
         %42 = OpSelect %v2uint %41 %33 %43
         %45 = OpShiftRightLogical %v2uint %37 %42
         %46 = OpBitwiseAnd %v2uint %45 %47
         %49 = OpIEqual %v2bool %46 %33
         %50 = OpSelect %v2uint %49 %33 %51
         %53 = OpShiftRightLogical %v2uint %45 %50
         %54 = OpBitwiseAnd %v2uint %53 %55
         %57 = OpIEqual %v2bool %54 %33
         %58 = OpSelect %v2uint %57 %33 %59
         %61 = OpShiftRightLogical %v2uint %53 %58
         %62 = OpBitwiseAnd %v2uint %61 %59
         %63 = OpIEqual %v2bool %62 %33
         %64 = OpSelect %v2uint %63 %33 %65
         %67 = OpBitwiseOr %v2uint %58 %64
         %68 = OpBitwiseOr %v2uint %50 %67
         %69 = OpBitwiseOr %v2uint %42 %68
         %70 = OpBitwiseOr %v2uint %34 %69
         %71 = OpIEqual %v2bool %61 %33
         %72 = OpSelect %v2uint %71 %73 %70
         %75 = OpBitcast %v2int %72
               OpStore %res %75
         %77 = OpLoad %v2int %res None
               OpReturnValue %77
               OpFunctionEnd
%vertex_main_inner = OpFunction %VertexOutput None %80
         %81 = OpLabel
        %out = OpVariable %_ptr_Function_VertexOutput Function %84
         %85 = OpAccessChain %_ptr_Function_v4float %out %uint_0
               OpStore %85 %88 None
         %89 = OpAccessChain %_ptr_Function_v2int %out %uint_1
         %90 = OpFunctionCall %v2int %firstLeadingBit_a622c2
               OpStore %89 %90 None
         %91 = OpLoad %VertexOutput %out None
               OpReturnValue %91
               OpFunctionEnd
%vertex_main = OpFunction %void None %94
         %95 = OpLabel
         %96 = OpFunctionCall %VertexOutput %vertex_main_inner
         %97 = OpCompositeExtract %v4float %96 0
               OpStore %vertex_main_position_Output %97 None
         %98 = OpCompositeExtract %v2int %96 1
               OpStore %vertex_main_loc0_Output %98 None
               OpStore %vertex_main___point_size_Output %float_1 None
               OpReturn
               OpFunctionEnd
