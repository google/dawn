//
// fragment_main
//
#include <metal_stdlib>
using namespace metal;

struct tint_module_vars_struct {
  device half* prevent_dce;
};

half cos_fc047d() {
  half arg_0 = 0.0h;
  half res = cos(arg_0);
  return res;
}

fragment void fragment_main(device half* prevent_dce [[buffer(0)]]) {
  tint_module_vars_struct const tint_module_vars = tint_module_vars_struct{.prevent_dce=prevent_dce};
  (*tint_module_vars.prevent_dce) = cos_fc047d();
}
//
// compute_main
//
#include <metal_stdlib>
using namespace metal;

struct tint_module_vars_struct {
  device half* prevent_dce;
};

half cos_fc047d() {
  half arg_0 = 0.0h;
  half res = cos(arg_0);
  return res;
}

kernel void compute_main(device half* prevent_dce [[buffer(0)]]) {
  tint_module_vars_struct const tint_module_vars = tint_module_vars_struct{.prevent_dce=prevent_dce};
  (*tint_module_vars.prevent_dce) = cos_fc047d();
}
//
// vertex_main
//
#include <metal_stdlib>
using namespace metal;

struct VertexOutput {
  float4 pos;
  half prevent_dce;
};

struct vertex_main_outputs {
  float4 VertexOutput_pos [[position]];
  half VertexOutput_prevent_dce [[user(locn0)]] [[flat]];
};

half cos_fc047d() {
  half arg_0 = 0.0h;
  half res = cos(arg_0);
  return res;
}

VertexOutput vertex_main_inner() {
  VertexOutput out = {};
  out.pos = float4(0.0f);
  out.prevent_dce = cos_fc047d();
  return out;
}

vertex vertex_main_outputs vertex_main() {
  VertexOutput const v = vertex_main_inner();
  vertex_main_outputs tint_wrapper_result = {};
  tint_wrapper_result.VertexOutput_pos = v.pos;
  tint_wrapper_result.VertexOutput_prevent_dce = v.prevent_dce;
  return tint_wrapper_result;
}
