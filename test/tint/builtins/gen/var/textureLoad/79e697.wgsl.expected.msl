//
// fragment_main
//
#include <metal_stdlib>
using namespace metal;

struct tint_module_vars_struct {
  device int4* prevent_dce;
  texture2d_array<int, access::sample> arg_0;
};

int4 textureLoad_79e697(tint_module_vars_struct tint_module_vars) {
  int2 arg_1 = int2(1);
  int arg_2 = 1;
  int arg_3 = 1;
  int2 const v = arg_1;
  int const v_1 = arg_3;
  uint const v_2 = min(uint(arg_2), (tint_module_vars.arg_0.get_array_size() - 1u));
  uint const v_3 = min(uint(v_1), (tint_module_vars.arg_0.get_num_mip_levels() - 1u));
  uint2 const v_4 = (uint2(tint_module_vars.arg_0.get_width(v_3), tint_module_vars.arg_0.get_height(v_3)) - uint2(1u));
  int4 res = tint_module_vars.arg_0.read(min(uint2(v), v_4), v_2, v_3);
  return res;
}

fragment void fragment_main(device int4* prevent_dce [[buffer(0)]], texture2d_array<int, access::sample> arg_0 [[texture(0)]]) {
  tint_module_vars_struct const tint_module_vars = tint_module_vars_struct{.prevent_dce=prevent_dce, .arg_0=arg_0};
  (*tint_module_vars.prevent_dce) = textureLoad_79e697(tint_module_vars);
}
//
// compute_main
//
#include <metal_stdlib>
using namespace metal;

struct tint_module_vars_struct {
  device int4* prevent_dce;
  texture2d_array<int, access::sample> arg_0;
};

int4 textureLoad_79e697(tint_module_vars_struct tint_module_vars) {
  int2 arg_1 = int2(1);
  int arg_2 = 1;
  int arg_3 = 1;
  int2 const v = arg_1;
  int const v_1 = arg_3;
  uint const v_2 = min(uint(arg_2), (tint_module_vars.arg_0.get_array_size() - 1u));
  uint const v_3 = min(uint(v_1), (tint_module_vars.arg_0.get_num_mip_levels() - 1u));
  uint2 const v_4 = (uint2(tint_module_vars.arg_0.get_width(v_3), tint_module_vars.arg_0.get_height(v_3)) - uint2(1u));
  int4 res = tint_module_vars.arg_0.read(min(uint2(v), v_4), v_2, v_3);
  return res;
}

kernel void compute_main(device int4* prevent_dce [[buffer(0)]], texture2d_array<int, access::sample> arg_0 [[texture(0)]]) {
  tint_module_vars_struct const tint_module_vars = tint_module_vars_struct{.prevent_dce=prevent_dce, .arg_0=arg_0};
  (*tint_module_vars.prevent_dce) = textureLoad_79e697(tint_module_vars);
}
//
// vertex_main
//
#include <metal_stdlib>
using namespace metal;

struct tint_module_vars_struct {
  texture2d_array<int, access::sample> arg_0;
};

struct VertexOutput {
  float4 pos;
  int4 prevent_dce;
};

struct vertex_main_outputs {
  float4 VertexOutput_pos [[position]];
  int4 VertexOutput_prevent_dce [[user(locn0)]] [[flat]];
};

int4 textureLoad_79e697(tint_module_vars_struct tint_module_vars) {
  int2 arg_1 = int2(1);
  int arg_2 = 1;
  int arg_3 = 1;
  int2 const v = arg_1;
  int const v_1 = arg_3;
  uint const v_2 = min(uint(arg_2), (tint_module_vars.arg_0.get_array_size() - 1u));
  uint const v_3 = min(uint(v_1), (tint_module_vars.arg_0.get_num_mip_levels() - 1u));
  uint2 const v_4 = (uint2(tint_module_vars.arg_0.get_width(v_3), tint_module_vars.arg_0.get_height(v_3)) - uint2(1u));
  int4 res = tint_module_vars.arg_0.read(min(uint2(v), v_4), v_2, v_3);
  return res;
}

VertexOutput vertex_main_inner(tint_module_vars_struct tint_module_vars) {
  VertexOutput out = {};
  out.pos = float4(0.0f);
  out.prevent_dce = textureLoad_79e697(tint_module_vars);
  return out;
}

vertex vertex_main_outputs vertex_main(texture2d_array<int, access::sample> arg_0 [[texture(0)]]) {
  tint_module_vars_struct const tint_module_vars = tint_module_vars_struct{.arg_0=arg_0};
  VertexOutput const v_5 = vertex_main_inner(tint_module_vars);
  vertex_main_outputs tint_wrapper_result = {};
  tint_wrapper_result.VertexOutput_pos = v_5.pos;
  tint_wrapper_result.VertexOutput_prevent_dce = v_5.prevent_dce;
  return tint_wrapper_result;
}
