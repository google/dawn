//
// fragment_main
//
#include <metal_stdlib>
using namespace metal;

struct tint_module_vars_struct {
  device float4* prevent_dce;
  texture2d_array<float, access::read_write> arg_0;
};

float4 textureLoad_dd5859(tint_module_vars_struct tint_module_vars) {
  int2 arg_1 = int2(1);
  int arg_2 = 1;
  int2 const v = arg_1;
  uint const v_1 = min(uint(arg_2), (tint_module_vars.arg_0.get_array_size() - 1u));
  uint2 const v_2 = (uint2(tint_module_vars.arg_0.get_width(0u), tint_module_vars.arg_0.get_height(0u)) - uint2(1u));
  float4 res = tint_module_vars.arg_0.read(min(uint2(v), v_2), v_1);
  return res;
}

fragment void fragment_main(device float4* prevent_dce [[buffer(0)]], texture2d_array<float, access::read_write> arg_0 [[texture(0)]]) {
  tint_module_vars_struct const tint_module_vars = tint_module_vars_struct{.prevent_dce=prevent_dce, .arg_0=arg_0};
  (*tint_module_vars.prevent_dce) = textureLoad_dd5859(tint_module_vars);
}
//
// compute_main
//
#include <metal_stdlib>
using namespace metal;

struct tint_module_vars_struct {
  device float4* prevent_dce;
  texture2d_array<float, access::read_write> arg_0;
};

float4 textureLoad_dd5859(tint_module_vars_struct tint_module_vars) {
  int2 arg_1 = int2(1);
  int arg_2 = 1;
  int2 const v = arg_1;
  uint const v_1 = min(uint(arg_2), (tint_module_vars.arg_0.get_array_size() - 1u));
  uint2 const v_2 = (uint2(tint_module_vars.arg_0.get_width(0u), tint_module_vars.arg_0.get_height(0u)) - uint2(1u));
  float4 res = tint_module_vars.arg_0.read(min(uint2(v), v_2), v_1);
  return res;
}

kernel void compute_main(device float4* prevent_dce [[buffer(0)]], texture2d_array<float, access::read_write> arg_0 [[texture(0)]]) {
  tint_module_vars_struct const tint_module_vars = tint_module_vars_struct{.prevent_dce=prevent_dce, .arg_0=arg_0};
  (*tint_module_vars.prevent_dce) = textureLoad_dd5859(tint_module_vars);
}
