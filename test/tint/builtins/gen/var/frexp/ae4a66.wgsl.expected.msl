//
// fragment_main
//
#include <metal_stdlib>
using namespace metal;

struct frexp_result_vec3_f16 {
  half3 fract;
  int3 exp;
};

void frexp_ae4a66() {
  half3 arg_0 = half3(1.0h);
  frexp_result_vec3_f16 v = {};
  v.fract = frexp(arg_0, v.exp);
  frexp_result_vec3_f16 res = v;
}

fragment void fragment_main() {
  frexp_ae4a66();
}
//
// compute_main
//
#include <metal_stdlib>
using namespace metal;

struct frexp_result_vec3_f16 {
  half3 fract;
  int3 exp;
};

void frexp_ae4a66() {
  half3 arg_0 = half3(1.0h);
  frexp_result_vec3_f16 v = {};
  v.fract = frexp(arg_0, v.exp);
  frexp_result_vec3_f16 res = v;
}

kernel void compute_main() {
  frexp_ae4a66();
}
//
// vertex_main
//
#include <metal_stdlib>
using namespace metal;

struct frexp_result_vec3_f16 {
  half3 fract;
  int3 exp;
};

struct VertexOutput {
  float4 pos;
};

struct vertex_main_outputs {
  float4 VertexOutput_pos [[position]];
};

void frexp_ae4a66() {
  half3 arg_0 = half3(1.0h);
  frexp_result_vec3_f16 v = {};
  v.fract = frexp(arg_0, v.exp);
  frexp_result_vec3_f16 res = v;
}

VertexOutput vertex_main_inner() {
  VertexOutput out = {};
  out.pos = float4(0.0f);
  frexp_ae4a66();
  return out;
}

vertex vertex_main_outputs vertex_main() {
  vertex_main_outputs tint_wrapper_result = {};
  tint_wrapper_result.VertexOutput_pos = vertex_main_inner().pos;
  return tint_wrapper_result;
}
